# Mercurial config

[ui]
# username to use for commits
username = Jonathan Kotta <jpkotta@gmail.com>

# use emacs as a merge tool, special command line options elsewhere
merge = emacs

# ignore file for all repositories
ignore = ~/.hgignore.global

[extensions]
# color output from some commands
color =

# use an external diff tool (diff by default)
extdiff =

# edit history
histedit =

# remove changesets from history
strip =

# use a pager with long outputs
pager =

# show a progress bar for certain operations that take a long time
progress =

# remove untracked files
purge =

# move changesets to a different (named or unnamed) branch, merging if
# necessary
rebase =

# simple extension to commit by diff hunk
record =

# allows custom URI schemes, like pd:// = ssh://hg@storagez/repos/
schemes =

# temporarily stash changes without a commit
shelve =

# use mercurial as a git client
# hg clone https://bitbucket.org/durin42/hg-git ~/.hgext/hg-git
# sudo pip install dulwich
hgext.hggit = ~/.hgext/hg-git/hggit

# use mercurial as a subversion client
# http://bitbucket.org/durin42/hgsubversion/wiki/Home
# requires python-subversion
# recommends rebase extension
hgext.hgsubversion = ~/.hgext/hgsubversion/hgsubversion

# curses record
# hg clone https://bitbucket.org/edgimar/crecord
hgext.crecord = ~/.hgext/crecord/crecord

[alias]
summ = summary --remote

# shelve extension
ls = shelve --list
ll = shelve --list --stat
lll = shelve --list --stat --patch --pager=yes

# remove all untracked .orig files
rmorig = purge --include=**.orig
rmrej = purge --include=**.rej

glog = log --graph
vlog = log --graph --verbose --pager=yes

# # replacement for MQ
# # http://mercurial.selenic.com/wiki/MqDeprecationPlan
# qapplied = log --rev 'draft() and ::.'
# qdelete = histedit
# qdiff = diff --rev .^
# qfold = histedit
# qgoto = update
# qheader = log --rev . --template '{desc}\n'
# qimport = import --partial
# qnew = commit
# qnext = log --rev 'children(.)'
# qpop = update .^
# qprev = log --rev .^
# qpush = update --rev 'children(.)'
# qqueue = bookmarks
# qrefresh = commit --amend
# qseries = log --rev 'draft()'
# qtop = identify --bookmarks
# qunapplied = log --rev 'draft() - ::.'

[diff]
# use git's diff format
git = True
# but suppress binary diffs
nobinary = True

[trusted]
# use sshfs -o idmap=user <remote> <mount-point> to map remote UID to your UID
users = root

[schemes]
pd = ssh://hg.packetdigital.com/hg/
pdsvn = svn+ssh://svn.packetdigital.com/svn/

[subpaths]
(.*)/hg@storagez(\.packetdigital\.com|)/repos/(.*) = \1/hg/hg/\3

[merge-tools]
emacs.binary = False
emacs.args = -q --eval "(require 'ediff)" --eval "(setq ediff-window-setup-function 'ediff-setup-windows-plain)" --eval "(add-hook 'ediff-quit-hook 'save-buffers-kill-emacs)" --eval "(ediff-merge-with-ancestor \""$local"\" \""$other"\" \""$base"\" nil \""$output"\")"
emacs.check = prompt

[tortoisehg]
vdiff = meld
hgtkfork = True

[hgview]
maxfilesize = 10000000

# vvv
# http://jordi.inversethought.com/blog/customising-mercurial-like-a-pro/
[revsetalias]
wip = (parents(not public()) or not public() or . or head()) and (not obsolete() or unstable()^) and not closed()

[templates]
wip = '{label("log.branch", ifeq(branch, "default", "", branch))} {label("changeset.{phase}", rev)} {label("grep.user", author|user)}{label("log.tag", if(tags," {tags}"))} {bookmarks % "{ifeq(bookmark, currentbookmark, label('log.activebookmark', bookmark), label('log.bookmark', bookmark))} "}\n{label(ifcontains(rev, revset('parents()'), 'desc.here'),desc|firstline)}'

[color]
log.branch = cyan
log.summary = yellow
log.description = yellow
log.bookmark = green
log.tag = red
log.activebookmark = green bold underline

changeset.public = red bold
changeset.secret = blue bold
changeset.draft = yellow bold

desc.here = bold blue_background

[alias]
wip = log --graph --rev=wip --template=wip
# ^^^

# per-machine settings
%include .hgrc.local
