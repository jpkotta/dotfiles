################################################################################
#
# DESKTOP UTILITIES
#
################################################################################

################################################################################
# NOTES
################################################################################

# this is a set of windows named Desktop* that I use all the time
# nearly everything specific to them is defined in this file

# this file uses the following globals:
#   last_desktop

# this file sets EdgeCommands and EdgeLeaveCommands


################################################################################
# ENVIRONMENT VARIBLES
################################################################################

AddSchedId SHOW_DESKTOP_PAGER_SCHED_ID
AddSchedId SHOW_DESKTOP_ICONS_SCHED_ID
AddSchedId SHOW_DESKTOP_TERMINAL_SCHED_ID
AddSchedId SHOW_DESKTOP_BUTTONS_SCHED_ID
AddSchedId SHOW_DESKTOP_TASKBAR_SCHED_ID

AddColorset BUTTONS_COLORSET
AddColorset PAGER_COLORSET
AddColorset PAGER_HILIGHT_COLORSET
AddColorset PAGER_BALLOON_COLORSET
AddColorset PAGER_WINDOW_COLORSET
AddColorset PAGER_HILIGHT_WINDOW_COLORSET

################################################################################
# STYLES
################################################################################

# COMMON STYLES
Style Desktop* !Borders, NoIcon, NoTitle, \
    WindowListSkip, CirculateSkip, FixedPosition, FixedSize, \
    !Closable, !Iconifiable, Sticky, !Maximizable, !SkipMapping

# INDIVIDUAL STYLES

Style DesktopTerminal*  TitleAtRight, SloppyFocus, FPLeaveToUnfocus, Layer 6, \
                        StartsOnScreen $[infostore.right_screen]

Style DesktopButtons*   NeverFocus, TitleAtLeft, Layer 6, \
    StartsOnScreen $[infostore.left_screen]
Style DesktopButtonsMediaPlayer TitleAtTop

# DesktopMiniPager must be on top so it's always visible
# DesktopPager must be on top so it's on the same layer as DesktopMiniPager
Style DesktopPager 	NeverFocus, TitleAtTop, Layer 6
Style DesktopMiniPager 	NeverFocus, TitleAtTop, Layer 5

Style DesktopTaskbar    NeverFocus, TitleAtBottom, Layer 6

# SWALLOWED BY FVWMBUTTONS

# SkipMapping doesn't map the windows when the apps are launched
# it appears they become visible as soon as they're swallowed
Style xclock    SkipMapping
Style dclock    BorderWidth 0, SkipMapping
Style gkrellm   SkipMapping


################################################################################
#
# FUNCTIONS
#
################################################################################

################################################################################
# SHOW/HIDE FUNCTIONS
################################################################################

# the utilities are unhidden with EdgeCommand
# they are hidden with FvwmAuto
# you move the pointer into an edge, and it schedules a command to show the relevant window
# if you move the pointer out of the edge before the command executes, it is descheduled
# similar functionality can be achieved with FvwmAuto, but I ran into problems with that
# (I think it was related to the fact that none of these have borders)
# Anyway, I think this is easier to understand and more robust, although more limiting

InfoStoreAdd edge_cmd.enter.n "Schedule 500 $[SHOW_DESKTOP_PAGER_SCHED_ID] ShowDesktopPager"
InfoStoreAdd edge_cmd.leave.n "Deschedule $[SHOW_DESKTOP_PAGER_SCHED_ID]"

InfoStoreAdd edge_cmd.enter.e "Mouse 1 R A ToggleDesktopTerminal"
InfoStoreAdd edge_cmd.leave.e "Mouse 1 R A RootWindowBinding"

InfoStoreAdd edge_cmd.enter.w "Mouse 1 R A ToggleDesktopButtons"
InfoStoreAdd edge_cmd.leave.w "Mouse 1 R A RootWindowBinding"

RestoreEdgeCommands

# $0 should be $[w.id]
DestroyFunc EnterWindowHandler
AddToFunc EnterWindowHandler
#+ I Echo EnterWindowHandler: w.name = $[w.name], w.iconname = $[w.iconname], w.class = $[w.class], w.resource = $[w.resource]
#+ I WindowId $0 (Desktop*) HideDesktopUtils
+ I Nop

# $0 should be $[w.id]
# WindowId acts as a very fast prefilter
# because the Hide* functions have All searches that don't scale when there are many windows
DestroyFunc LeaveWindowHandler
AddToFunc LeaveWindowHandler
#+ I Echo LeaveWindowHandler: w.name = $[w.name], w.iconname = $[w.iconname], w.class = $[w.class], w.resource = $[w.resource]
+ I WindowId $0 (Desktop*) HideDesktopUtils
+ I Nop

DestroyFunc HideDesktopUtilsFilter
AddToFunc HideDesktopUtilsFilter
# do nothing if pointer window is a DesktopUtil
+ I PointerWindow (Desktop*) Break
# do nothing if pointer window is not root
+ I TestRc (Error) $*
+ I $*

DestroyFunc HideDesktopUtils
AddToFunc HideDesktopUtils
+ I Schedule 500 HideDesktopUtilsFilter HideDesktopPager

########################################################################

DestroyFunc ShowDesktopPager
AddToFunc ShowDesktopPager
+ I All (DesktopPager) WindowShade False
+ I All (DesktopPager) Raise

DestroyFunc HideDesktopPager
AddToFunc HideDesktopPager
+ I All (DesktopPager) WindowShade True N
+ I All (DesktopPager) Lower

DestroyFunc ShowDesktopTerminal
AddToFunc ShowDesktopTerminal
+ I All (DesktopTerminal*) WindowShade False
+ I All (DesktopTerminal*) Raise
+ I All (DesktopTerminal*) WindowStyle SloppyFocus

DestroyFunc HideDesktopTerminal
AddToFunc HideDesktopTerminal
+ I All (DesktopTerminal*) WindowStyle NeverFocus
+ I All (DesktopTerminal*) WindowShade True E
+ I All (DesktopTerminal*) Lower
# sometimes the pager gets shown (e.g. pointer gets pushed up there)
# this seems like an intuitive place to get rid of it
+ I Any (CirculateHit, DesktopPager, !Shaded) CursorMove 0p 5p
+ I HideDesktopPager
# without the schedule, it somehow runs ShowDesktopTerminal in ToggleDesktopTerminal
+ I Schedule 1 FocusPrev

# raise and warp pointer to previous DesktopTerminal
# toggles between them when called more than once
DestroyFunc PrevDesktopTerminal
AddToFunc PrevDesktopTerminal
+ I ShowDesktopTerminal
+ I Prev (DesktopTerminal*, CirculateHit) FlipFocus NoWarp
+ I Prev (DesktopTerminal*, CirculateHit) WarpToWindow 50 50

DestroyFunc ToggleDesktopTerminal
AddToFunc ToggleDesktopTerminal
+ I Any (DesktopTerminal*, CirculateHit, !Shaded) HideDesktopTerminal
+ I TestRc (NoMatch) ShowDesktopTerminal

DestroyFunc ShowDesktopButtons
AddToFunc ShowDesktopButtons
+ I All (DesktopButtons*) WindowShade False
+ I All (DesktopButtons*) Raise
+ I All (DesktopButtonsMediaPlayer) WindowStyle SloppyFocus

DestroyFunc ShowDesktopButtonsWarp
AddToFunc ShowDesktopButtonsWarp
+ I ShowDesktopButtons
+ I All (DesktopButtonsMediaPlayer) WarpToWindow 50 50

DestroyFunc HideDesktopButtons
AddToFunc HideDesktopButtons
+ I All (DesktopButtons*) WindowShade True W
+ I All (DesktopButtons*) Lower
+ I All (DesktopButtons*) WindowStyle NeverFocus
# without the schedule, it somehow runs ShowDesktopButtons in ToggleDesktopButtons
+ I Schedule 1 FocusPrev

# toggles the DesktopButtons* on and off
DestroyFunc ToggleDesktopButtons
AddToFunc ToggleDesktopButtons
+ I Any (DesktopButtons*, CirculateHit, !Shaded) HideDesktopButtons
+ I TestRc (NoMatch) ShowDesktopButtons

# toggles the DesktopButtons* on and off
DestroyFunc ToggleDesktopButtonsWarp
AddToFunc ToggleDesktopButtonsWarp
+ I Any (DesktopButtons*, CirculateHit, !Shaded) HideDesktopButtons
+ I TestRc (NoMatch) ShowDesktopButtonsWarp

################################################################################
#
# MODULE CONFIGURATION
#
################################################################################

################################################################################
# DesktopButtons
################################################################################

# The main idea here is information display, secondary is an easily
# accessible place (xpostit and media player).

# On netbooks, the screen is narrow, so we have to reorder things a
# bit to make it less tall and wider.

DestroyModuleConfig DesktopButtons: *

Colorset $[BUTTONS_COLORSET]    fg blue4, bg black, hi black, sh black

*DesktopButtons: Geometry +-2+0@$[infostore.left_screen]
*DesktopButtons: ButtonGeometry 16x16
*DesktopButtons: BoxSize smart
*DesktopButtons: Columns 8
Test (EnvIsSet USE_NETBOOK) *DesktopButtons: Columns 12
*DesktopButtons: Colorset $[BUTTONS_COLORSET]

Test (EnvIsSet USE_NETBOOK) \
    Test (x gkrellm) \
    *DesktopButtons: (4x28, Frame 0, ActionIgnoresClientWindow, \
    Action (Mouse 1) Exec killall gkrellm ; gkrellm, \
    Swallow (NoClose, SwallowNew, UseOld) \
    "gkrellm" "Exec exec gkrellm -geometry +1500+1500")
# sometimes, gkrellm gets weird, hence the restart action

# xclock resources are set in ~/.Xresources
Test (x xclock) \
    *DesktopButtons: (8x8, Frame 0, Swallow (NoClose, SwallowNew, UseOld) \
    "DesktopXClock" "Exec exec xclock -name DesktopXClock -update 1 -geometry +1500+1500")

Test (x dclock) \
    *DesktopButtons: (8x4, Frame 0, Swallow (NoClose, SwallowNew, UseOld) \
    "DesktopDClock" "Exec exec dclock -name DesktopDClock -fg lavender -bg black -led_off grey15 -miltime -seconds -noblink -fade -date '%a %b %d, %Y' \
     -geometry 128x64+1500+1500")

# possible calendar replacement
#urxvt -fn 6x13 +sb -geometry 22x9 -e sh -c "cal ; sleep 1h; done"

Test (!EnvIsSet USE_NETBOOK) \
    Test (x gkrellm) \
    *DesktopButtons: (4x28, Frame 0, ActionIgnoresClientWindow, \
    Action (Mouse 2) Exec killall gkrellm ; gkrellm, \
    Swallow (NoClose, SwallowNew, UseOld) \
    "gkrellm" "Exec exec gkrellm -geometry +1500+1500")
# sometimes, gkrellm gets weird, hence the restart action

# app launch buttons
*DesktopButtons: (4x4, Frame 0, Icon wifi.png, \
	Action (Mouse 1) 'Exec exec wicd-client -n')
*DesktopButtons: (4x4, Frame 0, Icon pidgin.png, \
	Action (Mouse 1) 'All (Pidgin) Raise')
*DesktopButtons: (4x4, Frame 0, Icon sonata_play.png, \
	Action (Mouse 1) 'exec next_album')
*DesktopButtons: (4x4, Frame 0, Icon sonata.png, \
	Action (Mouse 1) 'exec sonata')
*DesktopButtons: (4x4, Frame 0, Icon fvwm_icon.png, \
	Action (Mouse 1) 'StartConsole')
Test (!EnvIsSet USE_NETBOOK) \
    *DesktopButtons: (4x4, Frame 0, Icon Jlock.xpm, \
	Action (Mouse 1) 'LockScreen')
*DesktopButtons: (4x4, Frame 0, Icon Monitor.xpm, \
	Action (Mouse 1) 'ToggleScreensaver')


################################################################################
# DesktopButtonsMediaPlayer
################################################################################

DestroyFunc MediaPlayerDecrVol
AddToFunc MediaPlayerDecrVol
+ I Exec mpc --no-status volume -2

DestroyFunc MediaPlayerIncrVol
AddToFunc MediaPlayerIncrVol
+ I Exec mpc --no-status volume +2

DestroyFunc MediaPlayerPlayPause
AddToFunc MediaPlayerPlayPause
+ I Exec mpc --no-status toggle

DestroyFunc MediaPlayerNext
AddToFunc MediaPlayerNext
+ I Exec mpc --no-status next

DestroyFunc MediaPlayerPrev
AddToFunc MediaPlayerPrev
+ I Exec mpc --no-status prev

# swallows media player
# works like other desktop modules, so it hides/unhides with an EdgeCommand
DestroyModuleConfig DesktopButtonsMediaPlayer: *
*DesktopButtonsMediaPlayer: Geometry +128+-1@$[infostore.left_screen]
Test (EnvIsSet USE_NETBOOK) \
    *DesktopButtonsMediaPlayer: Geometry +192+-1@$[infostore.left_screen]
*DesktopButtonsMediaPlayer: Columns 1
*DesktopButtonsMediaPlayer: BoxSize smart
*DesktopButtonsMediaPlayer: Colorset $[BUTTONS_COLORSET]

# pix.x = char.x*7+4, pix.y = char.x*13+4
InfoStoreAdd media_buttons_geometry "844 160"
Test (EnvIsSet USE_NETBOOK) InfoStoreAdd media_buttons_geometry "704 160"

# if the media player doesn't start up, middle click on the button
# middle click is the only mouse button left, and is useless when ncmpc is running
*DesktopButtonsMediaPlayer: \
    (Size $[infostore.media_buttons_geometry], Frame 0, ActionIgnoresClientWindow, \
    Action (Mouse 2) StartMediaPlayer, \
    Swallow (NoClose, SwallowNew, UseOld) "DesktopMediaPlayer" StartMediaPlayer)

################################################
# ncmpc/ncmpcpp set up

InfoStoreAdd media_player_geometry 120x12
Test (EnvIsSet USE_NETBOOK) InfoStoreAdd media_player_geometry 100x12

DestroyFunc StartMediaPlayer
AddToFunc StartMediaPlayer
+ I StartTerminal -geometry $[infostore.media_player_geometry] \
    -title DesktopMediaPlayer -name DesktopMediaPlayer \
    +sb -fade 0 -fn "xft:DejaVu Sans Mono:pixelsize=10" -e sh -c "sleep 1 ; exec ncmpcpp"

################################################################################
# DesktopPager
################################################################################

DestroyModuleConfig DesktopPager: *

Colorset $[PAGER_COLORSET]                  fg white, bg black, VGradient 32 #020020 black
Colorset $[PAGER_HILIGHT_COLORSET]          fg black, bg white, VGradient 32 white lavender
Colorset $[PAGER_BALLOON_COLORSET]          fg black, bg bisque
Colorset $[PAGER_WINDOW_COLORSET]           fg white, bg grey51, DGradient 64 #7f757f #9fa9ad
Colorset $[PAGER_HILIGHT_WINDOW_COLORSET]   fg white, bg blue4, DGradient 64 #800080 #3989AF

*DesktopPager: Cols 4
*DesktopPager: Geometry +0+-1@$[infostore.left_screen]
*DesktopPager: DesktopScale 8
*DesktopPager: Font 'xft:Century Schoolbook L:Bold:Italic:pixelsize=14; \
    -adobe-new century schoolbook-medium-i-normal-*-14-*-*-*-*-*-*-*'
*DesktopPager: SmallFont 5x8
*DesktopPager: Colorset * $[PAGER_COLORSET]
*DesktopPager: HilightColorset * $[PAGER_HILIGHT_COLORSET]
*DesktopPager: BalloonColorset * $[PAGER_BALLOON_COLORSET]
*DesktopPager: WindowColorsets $[PAGER_WINDOW_COLORSET] $[PAGER_HILIGHT_WINDOW_COLORSET]
*DesktopPager: MiniIcons
*DesktopPager: Balloons
*DesktopPager: BalloonStringFormat "%c: %i"
*DesktopPager: UseSkipList


################################################################################
# DesktopMiniPager
################################################################################

# a much smaller version of the pager, mainly for showing where you are
DestroyModuleConfig DesktopMiniPager: *

*DesktopMiniPager: Cols 4
*DesktopMiniPager: Geometry -0+0@$[infostore.right_screen]
*DesktopMiniPager: DesktopScale 64
*DesktopMiniPager: Font none
*DesktopMiniPager: SmallFont none
*DesktopMiniPager: Colorset * $[PAGER_COLORSET]
*DesktopMiniPager: HilightColorset * $[PAGER_HILIGHT_COLORSET]
*DesktopMiniPager: BalloonColorset * $[PAGER_BALLOON_COLORSET]
*DesktopMiniPager: WindowColorsets $[PAGER_WINDOW_COLORSET] $[PAGER_HILIGHT_WINDOW_COLORSET]
*DesktopMiniPager: UseSkipList
*DesktopMiniPager: NoNames


################################################################################
# DesktopTerminals
################################################################################

InfoStoreAdd terminal_options.desktop "+sb -pe tabbedex"

# background color is slight transparency with a hint of blue
Test (EnvIsSet USE_COMPOSITE) \
    InfoStoreAdd terminal_options.desktop \
        "$[infostore.terminal_options.desktop] -depth 32 -bg rgba:0200/0000/1000/f400"

# use a larger geometry on large screens
Test (!EnvIsSet USE_NETBOOK) \
    InfoStoreAdd terminal_options.desktop \
        "$[infostore.terminal_options.desktop] -geometry 120x25"

DestroyFunc StartDesktopTerminal
AddToFunc StartDesktopTerminal
+ I Exec exec $[infostore.terminal_prog] $[infostore.terminal_options.desktop] $*

# during a restart, sometimes fvwm reads this file before finding old DesktopTerminals,
# and it creates new ones when it shouldn't.  Schedules prevent that by giving it
# a chance to find them
DestroyFunc StartDesktopDualTerminals
AddToFunc StartDesktopDualTerminals
+ I Schedule 500 None (DesktopTerminal, CirculateHit) \
    StartDesktopTerminal -name DesktopTerminal &
+ I Style DesktopTerminal PositionPlacement -0 50-100w
+ I Schedule 500 None (DesktopTerminal2, CirculateHit) \
    StartDesktopTerminal -name DesktopTerminal2 &
+ I Style DesktopTerminal2 PositionPlacement -0 -50+100w

DestroyFunc StartDestopSingleTerminal
AddToFunc StartDesktopSingleTerminal
+ I Schedule 500 None (DesktopTerminal, CirculateHit) \
    StartDesktopTerminal -name DesktopTerminal &
+ I Style DesktopTerminal PositionPlacement -0 50-50w

DestroyFunc StartDesktopTerminals
AddToFunc StartDesktopTerminals
+ I Test (EnvIsSet USE_NETBOOK) StartDesktopSingleTerminal
+ I Test (!EnvIsSet USE_NETBOOK) StartDesktopDualTerminals

################################################################################
#
# STARTUP
#
################################################################################

KillModule FvwmButtons DesktopButtons
KillModule FvwmButtons DesktopButtonsMediaPlayer
KillModule FvwmPager DesktopPager
KillModule FvwmPager DesktopMiniPager
KillModule FvwmAuto


Module FvwmButtons DesktopButtons
Module FvwmButtons DesktopButtonsMediaPlayer
Module FvwmPager DesktopPager 0 $[infostore.last_desktop]
Module FvwmPager DesktopMiniPager 0 $[infostore.last_desktop]
Module FvwmAuto 0 -passid -menter EnterWindowHandler LeaveWindowHandler
StartDesktopTerminals

DestroyFunc OnMapDesktopPager
AddToFunc OnMapDesktopPager
+ I HideDesktopPager
+ I Test (EnvIsSet USE_COMPOSITE) IncTranslucency

Style DesktopPager InitialMapCommand OnMapDesktopPager
Style DesktopTerminal* InitialMapCommand HideDesktopTerminal
Style DesktopButtons* InitialMapCommand HideDesktopButtons
