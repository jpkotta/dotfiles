#!/usr/bin/env python3
# -*- coding:utf-8 -*-

import time
from random import choice

from mpd import MPDClient

########################################################################

def connect():
    host = "localhost"
    port = 6600

    c = MPDClient()
    try:
        c.connect(host=host, port=port)
    except ConnectionRefusedError as e:
        print(e)
        exit(1)

    return c

def main_loop():
    c = connect()

    delay = 1
    playlist_finished = False
    while True:
        time.sleep(delay)

        # pylint: disable=no-member
        status = c.status()

        if playlist_finished and status["state"] == "stop":
            album = choice(c.list("album"))
            if isinstance(album, dict):
                album = album["album"]
            songs = c.find("album", album)

            c.clear()

            # check for duplicate album names (e.g. "Greatest Hits")
            if len([i for i in songs if i['track'] in ("01", "1")]) > 1:
                artist = choice(list({i['artist'] for i in songs}))
                songs = [i for i in songs if i['artist'] == artist]

            for song in songs:
                c.add(song["file"])
            playlist_finished = False

            c.play()

        if "error" in status:
            print("Error: %s" % status["error"])
            playlist_finished = True
            continue

        if ("song" in status
            and int(status["playlistlength"]) - 1 == int(status["song"])):

            elapsed,total = [float(x) for x in status["time"].split(":")]
            if (total - elapsed) <= 2*delay:
                playlist_finished = True

def main():
    try:
        main_loop()
    except KeyboardInterrupt:
        pass

########################################################################

if __name__ == '__main__':
    main()
