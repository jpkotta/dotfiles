#!/bin/bash

# zips specified files and saves them to a dated zip file in ~/backup/
# this is intended for a specific user's files
# customize the if-elif block

backup_dir=~/backup
date=`date +%m%d%y`

# always omit files that match these patterns
always_exclude="*.directory* *.xvpics*"

# options for zip
#   -r == recurse dirs
#   -n == do not attempt compression on files with these suffixes
options="-r -n .jpg:.png:.gif:.tif:.tiff:.gz:.bz2:.zip:.mp3:.mpg:.avi:.wmv:.rpm"

# type of backup to do
# customize this section
if [[ "$1" == "-config" ]] ; then 
    output="config$date"
    files="$HOME/.[^.]*"
    excludes="*.thumbnails* *.Trash* *.opera/cache4* *.gqview/thumbnails* *.gqview/trash* *.kde/share/cache* *.mozilla* *.doom* *.fvwm/thumbs/* *.rld* *.mov*"
elif [[ "$1" == "-data" ]] ; then
    output="data$date"
    files="$HOME/*"
    #excludes="*wallpaper/fotd* *fotd/wallpaper*" # infinite regress
    excludes="*installed* *backup* *tmp* */w/*"
elif [[ "$1" == "-rld" ]] ; then
    output="rld$date"
    files="$HOME/.rld"
    excludes=""
else
    echo -e "Usage: $0 { -config | -data | -rld }"
    echo -e "-config\n\tbackup all personal config files (all files in ~ that begin '.')"
    echo -e "-data\n\tbackup certain documents"
    echo -e "-rld\n\tbackup the entire ~/rld directory"
    exit
fi

# create a backup dir in ~ if it doesn't already exist
mkdir $backup_dir 2>/dev/null

# zip the files
zip $options $backup_dir/$output.zip $files -x $always_exclude $excludes

exit
