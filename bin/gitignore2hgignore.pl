#!/usr/bin/env perl

use warnings;

if (@ARGV < 1) {
    my $appname = `basename $0`;
    chomp($appname);
    print "Usage: $appname <topdir>\n";
    print "Searches the entire tree below <topdir> for files named \".gitignore\".\n";
    print "Then it converts the data in the .gitignores and converts it to a .hgignore file in <topdir>.\n";
    exit 1;
}

my $topdir = $ARGV[0];

if ( ! -d $topdir) {
    die("'$topdir' is not a directory.\n");
}

my @gitignores = `find '$topdir' -name '.hg*' -prune -o -type f -name .gitignore -print`;

my $outfile = "$topdir/.hgignore";
if ( -f $outfile) {
    while (1) {
	print "$outfile already exists.  Replace it (a backup will be created in ${outfile}.bck)?\n";
	$resp = <STDIN>;
	if ($resp =~ m/^\s*n/i) {
	    print "Aborting...\n";
	    exit 0;
	}
	elsif ($resp =~ m/^\s*y/i) {
	    last;
	}
    }
    system("cp -f $outfile ${outfile}.bck");
}

open(OUTFILE, "> $outfile") or
    die ("Could not open $outfile for writing: $!.\n");

print OUTFILE "# Mercurial ignore list, autogenerated from .gitignore files.\n";
print OUTFILE "syntax: glob\n";
foreach $gitignore (@gitignores) {
    unless (open(FILE, "< $gitignore")) {
	print STDERR "Can't open file '$gitignore' for reading: $!, Skipping.\n";
	next;
    }

    my $prepend = $gitignore;
    chomp($prepend);
    $prepend =~ s#^${topdir}/##;
    $prepend =~ s#.gitignore$##;

    print OUTFILE "#" x 72;
    print OUTFILE "\n# ${prepend}.gitignore\n\n";

    foreach $line (<FILE>) {
	# if not a comment or whitespace
	unless ($line =~ m/^#/ || $line =~ m/^\s*$/) {
	    $line =~ s/^/${prepend}/;
	}
	print OUTFILE "$line";
    }

    print OUTFILE "\n";
}

close(OUTFILE);
