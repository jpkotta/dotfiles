* TODO
* MISCELLANEOUS
** pacman
*** /etc/pacman.conf
IgnorePkg += linux linux-zen
ILoveCandy
Color
*** /etc/pacman.d/mirrorlist
reflector -a 1 --country "United States" --sort rate -n 5 --save /etc/pacman.d/mirrorlist
** modules
*** /etc/modprobe.d/nobeep.conf
blacklist pcspkr
*** /etc/modprobe.d/loop.conf
options loop max_part=15
** misc config
*** /etc/fstab
*** /etc/hostname
*** /etc/locale.gen
*** /etc/locale.conf
LANG=en_US.UTF-8
*** ln -s /usr/share/zoneinfo/CST6CDT /etc/localtime
*** hwclock --systohc --utc
*** timedatectl set-ntp true
*** /etc/nsswitch.conf
# [!UNAVAIL=return] fubars local DNS
hosts: files mymachines resolve dns myhostname
** cron
*** /etc/cron.daily/download-updates
#!/bin/sh
pacman --sync --refresh --sysupgrade --downloadonly --noconfirm >/dev/null
*** /etc/cron.weekly/paccache
#!/bin/sh
/usr/bin/paccache --remove --keep 1 --verbose
/usr/bin/paccache --remove --keep 1 --verbose --cachedir /var/cache/pacman/aur/
** users
useradd -m -g users -s /bin/bash $USER ; chfn $USER ; passwd $USER
for g in adm games log optical power storage systemd-journal users uucp video wheel ; do gpasswd -a $USER $g ; done
** udev
*** /etc/udev/rules.d/99-lowbatt.rules
SUBSYSTEM=="power supply", ATTR{status}=="Discharging", ATTR{capacity}=="2", RUN+="/usr/bin/systemctl suspend"
** systemd
systemctl enable cronie.service
systemctl enable dhcpcd.service
*** /etc/systemd/journald.conf
SystemMaxUse=100M # max journal size
** systemd-networkd
systemctl enable systemd-networkd.service
systemctl enable systemd-resolved.service
systemctl disable dhcpcd.service
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
*** /etc/systemd/network/ethernet.network
[Match]
Name=enp4s0

[Network]
DHCP=ipv4
*** /etc/systemd/network/usb-edison.network
[Match]
Name=ethusb0

[Network]
Address=192.168.2.2/24
*** /etc/systemd/network/10-usb-edison.link
[Match]
MACAddress=72:e8:af:2f:a8:d6

[Link]
Description=Edison USB Ethernet Adapter
Name=ethusb0
* abcde
** atomicparsley
* alsa-utils
* android-tools
** android-udev
gpasswd -a $USER adbusers
* apg
* ascii
* aspell-en
* avr-gcc
** avr-libc
** avrdude
* base-devel
* bash-completion
* bcache-tools-git
make-bcache -B /dev/sdXN # backing
echo /dev/sdXN > /sys/fs/bcache/register_quiet
make-bcache -C /dev/sdY # cache
echo /dev/sdY > /sys/fs/bcache/register
echo <cache UUID> > /sys/block/bcacheN/bcache/attach
** /etc/mkinitcpio.conf
MODULES += bcache
HOOKS += bcache
* btrfs-progs
ln -s /bin/true /sbin/fsck.btrfs
** /etc/cron.monthly/defrag
filesystems=`mount | grep btrfs | grep -o "on .* type" | sed -e "s/^on //" -e "s/ type$//"`
for fs in $filesystems ; do
    btrfs filesystem defrag --
    find "$fs" -xdev \( -type f -o -type d \) \
        -exec ionice -c idle btrfs filesystem defrag -- '{}' +
done
* bumblebee
gpasswd -a $USER bumblebee
systemctl enable bumblebeed.service
** nvidia
** bbswitch
* chromium
** chromium-pepper-flash
** chromium-widevine
* colordiff
* commit-patch
* compton-git
* cups
gpasswd -a $USER lp
gpasswd -a $USER sys
systemctl enable cups.service
lpadmin -d PRINTER_NAME
http://localhost:631
used the C3170i/postscript driver
** cups-filters
** cups-pdf
** foomatic-db
** foomatic-db-engine
** foomatic-db-nonfree
* dclock
* dictd
* emacs-lucid
* etc-update
* figlet
* firefox
* foldingathome-noroot
/opt/fah/fah-config
systemctl enable foldingathome.service
* font-bh-ttf
* font-mathematica
* fortune-mod
* fvwm
* gdmap
* geeqie
* gimp
** gimp-plugin-gmic
* git
* gkrellm
** gkrellweather
* global
* go
* gpm
systemctl enable gpm.service
* gstreamer0.10-plugins
* haveged
systemctl enable haveged.service
* hdparm
** /etc/udev/rules.d/hdparm.rules
ACTION=="add", KERNEL=="sd[az]", ATTR{queue/rotational}=="1", RUN+="/sbin/hdparm -B 254 /dev/$kernel"
* htop
* hugin
* iftop
* imagemagick
** imagemagick-doc
* iotop
* jupyter-notebook
* k3b
pacman -S --needed dvd+rw-tools vcdimager transcode emovix cdrdao cdparanoia
* kdegraphics-okular
xdg-mime default okularApplication_pdf.desktop application/pdf
** kpartsplugin
* keepassx
* libreoffice-still
** libreoffice-en-US
* lsof
* luminancehdr
* lyx
* mercurial
** hg-git-hg
** hgview
*** python2-qscintilla
* mesa-demos
* mlocate
** /etc/cron.weekly/updatedb-network
LOCATE_PATH=""
for share in nfs engineering hardware ; do
    ${UPDATEDB} \
        --prunefs "" \
        --database-root /media/$share \
        --output /var/lib/mlocate/mlocate-${share}.db

    LOCATE_PATH=$LOCATE_PATH:/var/lib/mlocate/mlocate-${share}.db
done

# add LOCATE_PATH to your ~/.bashrc to have locate search these databases
* mpd
systemctl --user enable mpd.service
systemctl --user enable ralbumd.service
** mpc
** ncmpcpp
* namcap
* nfs-utils
systemctl enable rpcbind.service
** /etc/fstab
SERVER:/path/on/server /media/MOUNTPOINT nfs ro,soft,intr
* nitrogen
systemctl --user enable --now nitrogen.service
* notification-daemon
systemctl --user enable --now notification-daemon.service
* numlockx
systemctl --user enable --now numlockx.service
* nvidia
** nvclock
** nvidia-utils
* openssh
systemctl enable sshd.service
** /etc/ssh/sshd_config
X11Forwarding yes
** keychain
** sshfs
* p7zip
* pacaur
cd /tmp
for i in cower pacaur ; do
    curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/$i.tar.gz
    tar xf $i.tar.gz
    (cd $i ; makepkg -si)
done

(cd /var/cache/pacman ; mkdir -p aur ; chgrp wheel aur ; chmod g+rwx aur)
** /etc/makepkg.conf
PKGDEST=/var/cache/pacman/aur/
MAKEFLAGS="j$(nproc)"
COMPRESSXZ=(xz -c -z --threads=0 -)
** One or more PGP signatures could not be verified!
gpg --recv-keys KEY_ID
* pacserve
systemctl enable pacserve.service
pacman.conf-insert_pacserve | sudo tee /etc/pacman.conf
* pbzip2
* perl-rename
* perl-term-readline-gnu
* pigz
* pkgbuild-introspection
* pkgfile
** /etc/cron.monthly/pkgfile
pkgfile --update >/dev/null
* pmount
* pulseaudio
gpasswd -a $USER audio
** pavucontrol
** pulseaudio-alsa
** pulseaudio-equalizer
* pysolfc
* python
** ipython
*** ipython-notebook
python-jinja python-tornado python-pyzmq python-pygments qt5-svg
** python-ipython-sql
** python-matplotlib
** python-numpy
** python-pylint
** python-pymysql
** python-pyserial
** python-scipy
** python-sqlalchemy
** python-mpd2
* python2
** ipython2
*** ipython2-notebook
python2-jinja python2-tornado python2-pyzmq python2-pygments qt5-svg
** python2-ipython-sql
** python2-matplotlib
** python2-numpy
** python2-pylint
** python2-pymysql
** python2-scipy
** python2-pyserial
** python2-sqlalchemy
* qbittorrent
* rdesktop
* redshift-minimal
systemctl --user enable --now redshift.service
* reflector
* rxvt-unicode
* samba
systemctl enable smbd.service
systemctl enable nmbd.service
systemctl enable winbindd.service
sudo pdbedit -a -u $USER
** /etc/samba/smb.conf
* schroot
** gnupg1
** debootstrap
mkdir -p /var/chroot/ubuntu
debootstrap --arch amd64 trusty /var/chroot/ubuntu http://us.archive.ubuntu.com/ubuntu/
cp -a /etc/schroot/arch32/ /etc/schroot/ubuntu/
** /etc/schroot/chroot.d/ubuntu.conf
[ubuntu]
description=Trusty
type=directory
directory=/var/chroot/ubuntu
users=jpkotta
groups=users
root-users=jpkotta
profile=ubuntu
aliases=trusty
** /etc/schroot/ubuntu/config
# Filesystems to mount inside the chroot.
FSTAB="/etc/schroot/ubuntu/mount"
# Files to copy from the host system into the chroot.
COPYFILES="/etc/schroot/ubuntu/copyfiles"
# System databases to copy into the chroot
NSSDATABASES="/etc/schroot/ubuntu/nssdatabases"
** /etc/schroot/ubuntu/copyfiles
/etc/group
/etc/hosts
/etc/passwd
/etc/resolv.conf
/etc/localtime
/etc/locale.gen
/etc/sudoers
** /etc/schroot/ubuntu/mount
# <file system>	<mount point>	<type>	<options>	<dump>	<pass>
proc		/proc		proc	defaults	0	0
/dev		/dev		none	rw,bind		0	0
/dev/pts	/dev/pts	none	rw,bind		0	0
tmpfs		/dev/shm	tmpfs	defaults	0	0
/sys		/sys		none	rw,bind		0	0
/tmp		/tmp		none	rw,bind		0	0
/home		/home		none	rw,bind		0	0
** /etc/schroot/ubuntu/nssdatabases
# <database name>
passwd
shadow
group
** inside the chroot
# list of groups: cat /etc/group /var/chroot/ubuntu/etc/group | cut -d: -f1 | sort -u
groupadd crontab
groupadd staff
* slim
systemctl enable slim.service
* smbclient
** /etc/samba/private/SERVER.cred
username=USERNAME
password=PASSWORD
** /etc/fstab
//SERVER/SHARE /media/MOUNTPOINT cifs x-systemd.automount,x-systemd.idle-timeout=1min,rw,uid=USER,gid=GROUP,credentials=/etc/samba/private/SERVER.cred,iocharset=utf8,file_mode=0644,dir_mode=0755 0 0
* spideroak-one
* strace
* subversion
* sudo
gpasswd -a $USER wheel
** /etc/sudoers
%wheel ALL=(ALL) ALL
* systemd-swap
# make sure there is a swap partition/file
systemctl enable systemctl-swap.service
** /etc/systemd/swap.conf
zswap_enabled=1
* texlive-most
* tftp-hpa
gpasswd -a $USER ftp
chgrp ftp /srv/tftp/
chmod g+rwx /srv/tftp/
* tlp
systemctl enable tlp.service
* tmux
* tpacpi-bat-git
FIXME: pull request pending
systemctl enable tpacpi.service
** acpi_call-git-dkms
* trash-cli
* tree
* ttf-dejavu
* ttf-indic-otf
* ttf-liberation
* ttf-mathtype
* ttf-ms-fonts
* ttf-symbola
* ttf-vista-fonts
* udiskie
systemctl --user enable --now udiskie.service
* units
* virtualbox
gpasswd -a $USER vboxusers
chattr +C ~/.VirtualBox/ # improves performance on btrfs
** /etc/modules-load.d/virtualbox.conf
vboxdrv
vboxnetadp
vboxnetflt
** virtualbox-ext-oracle
** virtualbox-guest-iso
* vlc
** libdvdcss
* wcalc
* wicd
systemctl enable wicd.service
* wine
need multilib repo if on 64-bit
** winetricks
** wine_gecko
** wine-mono
* words
* x11vnc
* xclip
* xf86-input-synaptics
* xf86-video-intel
** /etc/X11/xorg.conf.d/20-intel.conf
Section "Device"
   Identifier  "Intel Graphics"
   Driver      "intel"
   Option      "AccelMethod"  "sna"
   Option      "XvMC" "true"
EndSection
** /etc/X11/XvMCConfig
/usr/lib/libIntelXvMC.so
* xorg-apps
** xorg-xdpyinfo
** xorg-xmodmap
** xorg-xrandr
** xorg-xrdb
** xorg-xwd
* xorg-xbacklight
* xorg-server
* xorg-server-xephyr
* xorg-xclock
* xorg-xinit
* xscreensaver
systemctl --user enable --now xscreensaver.service
systemctl --user enable --now dpms.service
** xss-lock-git
