* TODO
** commit-patch
* MISCELLANEOUS
** files
*** /etc/pacman.conf
IgnorePkg += linux linux-headers
ILoveCandy
Color
*** /etc/pacman.d/mirrorlist
reflector -a 1 --country "United States" --sort rate -n 5 --save /etc/pacman.d/mirrorlist
*** /etc/fstab
*** /etc/modprobe.d/nobeep.conf
blacklist pcspkr
*** /etc/modprobe.d/loop.conf
options loop max_part=15
*** /etc/hostname
*** /etc/locale.gen
*** /etc/locale.conf
LANG=en_US.UTF-8
*** ln -s /usr/share/zoneinfo/CST6CDT /etc/localtime
*** hwclock --systohc --utc
*** /etc/cron.daily/download-updates
pacman --sync --refresh --sysupgrade --downloadonly --noconfirm >/dev/null
*** /etc/cron.weekly/paccache
#!/bin/sh
/usr/bin/paccache --remove --keep 1 --verbose
/usr/bin/paccache --remove --keep 1 --verbose --cachedir /var/cache/pacaur/pkg/
*** useradd -m -g users -s /bin/bash $USER ; chfn $USER ; passwd $USER
*** for g in adm games log optical power storage systemd-journal users uucp video wheel ; do gpasswd -a $USER $g ; done
*** /etc/udev/rules.d/99-lowbatt.rules
SUBSYSTEM=="power supply", ATTR{status}=="Discharging", ATTR{capacity}=="2", RUN+="/usr/bin/systemctl suspend"
*** /etc/udev/rules.d/60-iosched.rules
# doped sand
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="deadline"

# spinning rust
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="deadline"
** systemd
systemctl enable cronie.service
systemctl enable dhcpcd.service
*** /etc/systemd/journald.conf
SystemMaxUse=100M # max journal size
*** /etc/sysctl.d/swappiness.conf
vm.swappiness = 30
* abcde
** atomicparsley
* alsa-utils
* android-sdk-platform-tools
* apg
* ascii
* aspell-en
* avr-gcc
** avr-libc
** avrdude
* base-devel
* bash-completion
* bcache-tools-git
make-bcache -B /dev/sdXN # backing
echo /dev/sdXN > /sys/fs/bcache/register_quiet
make-bcache -C /dev/sdY # cache
echo /dev/sdY > /sys/fs/bcache/register
echo <cache UUID> > /sys/block/bcacheN/bcache/attach
** /etc/mkinitcpio.conf
MODULES += bcache
HOOKS += bcache
* btrfs-progs
ln -s /bin/true /sbin/fsck.btrfs
** /etc/cron.monthly/defrag
filesystems=`mount | grep btrfs | grep -o "on .* type" | sed -e "s/^on //" -e "s/ type$//"`
for fs in $filesystems ; do
    find "$fs" -xdev \( -type f -o -type d \) \
        -exec ionice -c 3 btrfs filesystem defrag -- '{}' +
done
* bumblebee
gpasswd -a $USER bumblebee
systemctl enable bumblebeed.service
** nvidia
** bbswitch
* chromium
* colordiff
* compton-git
* cups
gpasswd -a $USER lp
gpasswd -a $USER sys
systemctl enable cups.service
lpadmin -d PRINTER_NAME
used the C3070i/postscript driver
** cups-filters
** cups-pdf
** foomatic-db
** foomatic-db-engine
** foomatic-db-nonfree
* dclock
* dictd
* emacs-lucid
* etc-update
* figlet
* firefox
* flashplugin
/etc/adobe/mms.cfg
* foldingathome-jpk
/opt/fah/fah-config
systemctl enable foldingathome.service
* font-bh-ttf
* font-mathematica
* fortune-mod
* fvwm
* geeqie
* gimp
** gimp-plugin-gmic
* git
* gkrellm
** gkrellweather
* gpm
systemctl enable gpm.service
* gstreamer0.10-plugins
* hdparm
** /etc/udev/rules.d/hdparm.rules
ACTION=="add", KERNEL=="sd[az]", ATTR{queue/rotational}=="1", RUN+="/sbin/hdparm -B 254 /dev/$kernel"
* htop
* hugin
* iftop
* imagemagick
** imagemagick-doc
* inetutils
* iotop
* ispell
* k3b
pacman -S --needed dvd+rw-tools vcdimager transcode emovix cdrdao cdparanoia
* kdegraphics-okular
xdg-mime default okularApplication_pdf.desktop application/pdf
** kpartsplugin
* keepassx
* laptop-mode-tools
systemctl enable laptop-mode.service
** /etc/laptop-mode/conf.d/lcd-brightness.conf

#
# Should laptop mode tools control LCD brightness?
#
CONTROL_BRIGHTNESS=1


#
# Commands to execute to set the brightness on your LCD
#
# # feynman
# BATT_BRIGHTNESS_COMMAND="echo 3"
# LM_AC_BRIGHTNESS_COMMAND="echo 15"
# NOLM_AC_BRIGHTNESS_COMMAND="echo 15"
# BRIGHTNESS_OUTPUT="/sys/devices/platform/eeepc/backlight/eeepc/brightness"
# # mandelbrot
# BATT_BRIGHTNESS_COMMAND="echo 1000"
# LM_AC_BRIGHTNESS_COMMAND="echo 4437"
# NOLM_AC_BRIGHTNESS_COMMAND="echo 4437"
# BRIGHTNESS_OUTPUT="/sys/class/backlight/intel_backlight/brightness"

* libreoffice
removed libreoffice-sdk
** libreoffice-en-US
* localepurge
** /etc/locale.nopurge
** /etc/cron.monthly/localepurge
#!/bin/sh

/usr/bin/localepurge
/usr/bin/localepurge-config
/usr/bin/localepurge
* lsof
* luminancehdr
* lyx
* mercurial
** hg-git-hg
** hgview
*** python2-qscintilla
* mesa-demos
* mlocate
** /etc/cron.weekly/updatedb-network
LOCATE_PATH=""
for share in nfs engineering hardware ; do
    ${UPDATEDB} \
        --prunefs "" \
        --database-root /media/$share \
        --output /var/lib/mlocate/mlocate-${share}.db

    LOCATE_PATH=$LOCATE_PATH:/var/lib/mlocate/mlocate-${share}.db
done

# add LOCATE_PATH to your ~/.bashrc to have locate search these databases
* mpd
** mpc
** ncmpcpp
* nfs-utils
systemctl enable rpcbind.service
** /etc/fstab
SERVER:/path/on/server /media/MOUNTPOINT nfs ro,soft,intr
* nitrogen
* notification-daemon
* ntp
systemctl enable ntpd.service
* numlockx
* nvidia
** nvclock
** nvidia-utils
* openssh
systemctl enable sshd.service
** /etc/ssh/sshd_config
X11Forwarding yes
** keychain
** sshfs
* opera
* p7zip
* pacaur
cd /tmp
for i in cower pacaur ; do
    curl -O https://aur.archlinux.org/packages/${i:0:2}/$i/$i.tar.gz
    tar xf $i.tar.gz
    (cd $i ; makepkg -si)
done

mkdir -p /var/cache/pacaur/pkg
chgrp wheel /var/cache/pacaur/pkg
chmod g+rwx /var/cache/pacaur/pkg
** /etc/makepkg.conf
PKGDEST=/var/cache/pacaur/pkg/
* pacserve
systemctl enable pacserve.service
** /etc/pacman.conf/mirrorlist
Server = http://localhost:15678/request/$repo/$arch
* patchutils
* pbzip2
* perl-ipc-run
* perl-rename
* perl-term-readline-gnu
* pkgfile
** /etc/cron.monthly/pkgfile
pkgfile --update >/dev/null 
* pmount
* pulseaudio
gpasswd -a $USER audio
** pavucontrol
** pulseaudio-alsa
* pysolfc
* python
** ipython
*** ipython-notebook
python-jinja python-tornado python-pyzmq python-pygments
** python-ipython-sql
** python-matplotlib
** python-numpy
** python-pylint
** python-pymysql
** python-pyserial
** python-scipy
** python-sqlalchemy
* python2
** ipython2
*** ipython2-notebook
python2-jinja python2-tornado python2-pyzmq python2-pygments
** python2-ipython-sql
** python2-daemon
** python2-matplotlib
** python2-mpd
** python2-numpy
** python2-pylint
** python2-pymysql
** python2-scipy
** python2-pyserial
** python2-sqlalchemy
* qbittorrent
* rdesktop
* reflector
* rxvt-unicode
* samba
systemctl enable smbd.service
systemctl enable nmbd.service
systemctl enable winbindd.service
sudo pdbedit -a -u $USER
** /etc/smb.conf
* slim
systemctl enable slim.service
* smbclient
** /etc/samba/private/SERVER.cred
username=USERNAME
password=PASSWORD
** /etc/fstab
//SERVER/SHARE    /media/MOUNTPOINT      cifs    uid=USER,gid=GROUP,credentials=/etc/samba/private/SERVER.cred,iocharset=utf8,file_mode=0644,dir_mode=0755 0 0
* spideroak
* strace
* subversion
* sudo
gpasswd -a $USER wheel
** /etc/sudoers
%wheel ALL=(ALL) ALL
* texlive-most
* tmux
* trash-cli
* tree
* tremulous
* ttf-dejavu
* ttf-indic-otf
* ttf-liberation
* ttf-mathtype
* ttf-ms-fonts
* ttf-vista-fonts
* udiskie
* virtualbox
gpasswd -a $USER vboxusers
chattr +C ~/.VirtualBox/ # improves performance on btrfs
** /etc/modules-load.d/virtualbox.conf
vboxdrv
vboxnetadp
vboxnetflt
** virtualbox-ext-oracle
** virtualbox-guest-iso
* vlc
** libdvdcss
* wcalc
* wicd
systemctl enable wicd.service
* wine
need multilib repo if on 64-bit
** winetricks
** wine_gecko
** wine-mono
* words
* x11vnc
* xclip
* xf86-input-synaptics
* xf86-video-intel
** /etc/X11/xorg.conf.d/20-intel.conf
Section "Device"
   Identifier  "Intel Graphics"
   Driver      "intel"
   Option      "AccelMethod"  "sna"
   Option      "XvMC" "true"
EndSection
** /etc/X11/XvMCConfig
/usr/lib/libIntelXvMC.so
* xflux
* xorg-apps
** xorg-xdpyinfo
** xorg-xmodmap
** xorg-xrandr
** xorg-xrdb
** xorg-xwd
* xorg-xbacklight
* xorg-server
* xorg-server-xephyr
* xorg-xclock
* xorg-xinit 
* xscreensaver
** xuserrun-git
** /etc/systemd/system/xscreensaver.service
[Unit]
Description=Lock X session using xscreensaver
Before=sleep.target

[Service]
Type=oneshot
ExecStart=/usr/bin/xuserrun /usr/bin/xscreensaver-command -lock

[Install]
WantedBy=sleep.target

